package melcloudgo

import "time"

type LoginRequest struct {
	AppVersion      string      `json:"AppVersion"`
	CaptchaResponse interface{} `json:"CaptchaResponse"`
	Email           string      `json:"Email"`
	Language        int         `json:"Language"`
	Password        string      `json:"Password"`
	Persist         bool        `json:"Persist"`
}

type LoginResponse struct {
	AppVersionAnnouncement      interface{}   `json:"AppVersionAnnouncement"`
	EnableControlOfGuestDevices bool          `json:"EnableControlOfGuestDevices"`
	EnableEditStructure         bool          `json:"EnableEditStructure"`
	EnableFrostProtection       bool          `json:"EnableFrostProtection"`
	EnableHolidayMode           bool          `json:"EnableHolidayMode"`
	EnableInviteNewGuests       bool          `json:"EnableInviteNewGuests"`
	EnableManageGuestAccess     bool          `json:"EnableManageGuestAccess"`
	EnableRegistration          bool          `json:"EnableRegistration"`
	EnableScenes                bool          `json:"EnableScenes"`
	EnableTimer                 bool          `json:"EnableTimer"`
	ErrorId                     interface{}   `json:"ErrorId"`
	ErrorMessage                interface{}   `json:"ErrorMessage"`
	ListOwnershipChangeRequest  []interface{} `json:"ListOwnershipChangeRequest"`
	ListPendingAnnouncement     []interface{} `json:"ListPendingAnnouncement"`
	ListPendingInvite           []interface{} `json:"ListPendingInvite"`
	LoginAttempts               int           `json:"LoginAttempts"`
	LoginData                   struct {
		AL                            int         `json:"AL"`
		AtwLogoFile                   string      `json:"AtwLogoFile"`
		CAA                           bool        `json:"CAA"`
		CACA                          bool        `json:"CACA"`
		CAGA                          bool        `json:"CAGA"`
		CMI                           bool        `json:"CMI"`
		CMSC                          bool        `json:"CMSC"`
		CSVReport1Min                 bool        `json:"CSVReport1min"`
		CUTF                          bool        `json:"CUTF"`
		ChartSeriesHidden             int         `json:"ChartSeriesHidden"`
		Client                        int         `json:"Client"`
		ContextKey                    string      `json:"ContextKey"`
		Country                       int         `json:"Country"`
		CountryName                   string      `json:"CountryName"`
		CurrencySymbol                string      `json:"CurrencySymbol"`
		DECCReport                    bool        `json:"DECCReport"`
		DateSeperator                 string      `json:"DateSeperator"`
		DeletePending                 bool        `json:"DeletePending"`
		Duration                      int         `json:"Duration"`
		EmailCommsErrors              int         `json:"EmailCommsErrors"`
		EmailSettingsReminderRequired bool        `json:"EmailSettingsReminderRequired"`
		EmailSettingsReminderShown    bool        `json:"EmailSettingsReminderShown"`
		EmailUnitErrors               int         `json:"EmailUnitErrors"`
		Expiry                        string      `json:"Expiry"`
		HidePresetPanel               bool        `json:"HidePresetPanel"`
		IsImpersonated                bool        `json:"IsImpersonated"`
		IsStaff                       bool        `json:"IsStaff"`
		Language                      int         `json:"Language"`
		LanguageCode                  string      `json:"LanguageCode"`
		ML                            int         `json:"ML"`
		MapLatitude                   float64     `json:"MapLatitude"`
		MapLongitude                  float64     `json:"MapLongitude"`
		MapView                       bool        `json:"MapView"`
		MapZoom                       int         `json:"MapZoom"`
		MaximumDevices                int         `json:"MaximumDevices"`
		Name                          string      `json:"Name"`
		PartnerApplicationVersion     interface{} `json:"PartnerApplicationVersion"`
		RealClient                    int         `json:"RealClient"`
		ReceiveAllNotifications       bool        `json:"ReceiveAllNotifications"`
		ReceiveCountryNotifications   bool        `json:"ReceiveCountryNotifications"`
		ShowDiagnostics               bool        `json:"ShowDiagnostics"`
		SupportEmailAddress           string      `json:"SupportEmailAddress"`
		Terms                         int         `json:"Terms"`
		TermsText                     interface{} `json:"TermsText"`
		Throttle                      bool        `json:"Throttle"`
		Throttled                     bool        `json:"Throttled"`
		TimeSeperator                 string      `json:"TimeSeperator"`
		UseFahrenheit                 bool        `json:"UseFahrenheit"`
	} `json:"LoginData"`
	LoginMinutes int         `json:"LoginMinutes"`
	LoginStatus  int         `json:"LoginStatus"`
	RandomKey    interface{} `json:"RandomKey"`
	UserId       int         `json:"UserId"`
}

type ListDevicesResponse struct {
	AccessLevel          int         `json:"AccessLevel"`
	AddressLine1         string      `json:"AddressLine1"`
	AddressLine2         string      `json:"AddressLine2"`
	BuildingType         int         `json:"BuildingType"`
	City                 string      `json:"City"`
	CoolingDisabled      bool        `json:"CoolingDisabled"`
	Country              int         `json:"Country"`
	DateBuilt            string      `json:"DateBuilt"`
	DirectAccess         bool        `json:"DirectAccess"`
	District             int         `json:"District"`
	EndDate              string      `json:"EndDate"`
	Expanded             bool        `json:"Expanded"`
	FPDefined            bool        `json:"FPDefined"`
	FPEnabled            bool        `json:"FPEnabled"`
	FPMaxTemperature     int         `json:"FPMaxTemperature"`
	FPMinTemperature     int         `json:"FPMinTemperature"`
	HMDefined            bool        `json:"HMDefined"`
	HMEnabled            bool        `json:"HMEnabled"`
	HMEndDate            interface{} `json:"HMEndDate"`
	HMStartDate          interface{} `json:"HMStartDate"`
	HasGasSupply         bool        `json:"HasGasSupply"`
	ID                   int         `json:"ID"`
	Latitude             float64     `json:"Latitude"`
	LinkToMELCloudHome   bool        `json:"LinkToMELCloudHome"`
	Location             int         `json:"Location"`
	LocationLookupDate   string      `json:"LocationLookupDate"`
	Longitude            float64     `json:"Longitude"`
	MaxTemperature       int         `json:"MaxTemperature"`
	MinTemperature       int         `json:"MinTemperature"`
	Name                 string      `json:"Name"`
	Owner                interface{} `json:"Owner"`
	Postcode             string      `json:"Postcode"`
	PropertyType         int         `json:"PropertyType"`
	QuantizedCoordinates struct {
		Latitude  float64 `json:"Latitude"`
		Longitude float64 `json:"Longitude"`
	} `json:"QuantizedCoordinates"`
	Structure struct {
		Areas   []interface{} `json:"Areas"`
		Clients []interface{} `json:"Clients"`
		Devices []struct {
			AccessLevel                      int            `json:"AccessLevel"`
			AdaptorType                      int            `json:"AdaptorType"`
			AreaID                           interface{}    `json:"AreaID"`
			AreaName                         interface{}    `json:"AreaName"`
			BuildingCountry                  interface{}    `json:"BuildingCountry"`
			BuildingID                       int            `json:"BuildingID"`
			BuildingName                     interface{}    `json:"BuildingName"`
			DateCreated                      time.Time      `json:"DateCreated"`
			DetectedCountry                  interface{}    `json:"DetectedCountry"`
			Device                           DeviceLiveInfo `json:"Device"`
			DeviceID                         int            `json:"DeviceID"`
			DeviceName                       string         `json:"DeviceName"`
			DiagnosticEndDate                interface{}    `json:"DiagnosticEndDate"`
			DiagnosticMode                   int            `json:"DiagnosticMode"`
			DirectAccess                     bool           `json:"DirectAccess"`
			EndDate                          string         `json:"EndDate"`
			EstimateAtaEnergyProduction      bool           `json:"EstimateAtaEnergyProduction"`
			EstimateAtaEnergyProductionOptIn bool           `json:"EstimateAtaEnergyProductionOptIn"`
			ExpectedCommand                  int            `json:"ExpectedCommand"`
			FirmwareDeployment               interface{}    `json:"FirmwareDeployment"`
			FirmwareUpdateAborted            bool           `json:"FirmwareUpdateAborted"`
			FloorID                          interface{}    `json:"FloorID"`
			FloorName                        interface{}    `json:"FloorName"`
			HideDryModeControl               bool           `json:"HideDryModeControl"`
			HideOutdoorTemperature           bool           `json:"HideOutdoorTemperature"`
			HideRoomTemperature              bool           `json:"HideRoomTemperature"`
			HideSupplyTemperature            bool           `json:"HideSupplyTemperature"`
			HideVaneControls                 bool           `json:"HideVaneControls"`
			ImageID                          int            `json:"ImageID"`
			InstallationDate                 interface{}    `json:"InstallationDate"`
			LastServiceDate                  interface{}    `json:"LastServiceDate"`
			LinkedDevice                     interface{}    `json:"LinkedDevice"`
			LocalIPAddress                   interface{}    `json:"LocalIPAddress"`
			Location                         int            `json:"Location"`
			MacAddress                       string         `json:"MacAddress"`
			MaxTemperature                   int            `json:"MaxTemperature"`
			MinTemperature                   int            `json:"MinTemperature"`
			OwnerCountry                     interface{}    `json:"OwnerCountry"`
			OwnerEmail                       interface{}    `json:"OwnerEmail"`
			OwnerID                          int            `json:"OwnerID"`
			OwnerName                        interface{}    `json:"OwnerName"`
			Permissions                      struct {
				CanSetEcoHotWater                  bool `json:"CanSetEcoHotWater"`
				CanSetFlowTemperature              bool `json:"CanSetFlowTemperature"`
				CanSetForcedHotWater               bool `json:"CanSetForcedHotWater"`
				CanSetOperationMode                bool `json:"CanSetOperationMode"`
				CanSetPower                        bool `json:"CanSetPower"`
				CanSetTankWaterTemperature         bool `json:"CanSetTankWaterTemperature"`
				CanSetTemperatureIncrementOverride bool `json:"CanSetTemperatureIncrementOverride"`
			} `json:"Permissions"`
			Presets       []interface{} `json:"Presets"`
			RegistReason  string        `json:"RegistReason"`
			RegistRetry   int           `json:"RegistRetry"`
			Registrations int           `json:"Registrations"`
			SerialNumber  string        `json:"SerialNumber"`
			TimeZone      int           `json:"TimeZone"`
			Type          int           `json:"Type"`
			Zone1Name     interface{}   `json:"Zone1Name"`
			Zone2Name     interface{}   `json:"Zone2Name"`
		} `json:"Devices"`
		Floors []interface{} `json:"Floors"`
	} `json:"Structure"`
	TimeZone          int         `json:"TimeZone"`
	TimeZoneCity      int         `json:"TimeZoneCity"`
	TimeZoneContinent int         `json:"TimeZoneContinent"`
	IDateBuilt        interface{} `json:"iDateBuilt"`
}

type DeviceLiveInfo struct {
	AdaptorType                      int         `json:"AdaptorType"`
	AllowDualRoomTemperature         bool        `json:"AllowDualRoomTemperature"`
	BoilerStatus                     bool        `json:"BoilerStatus"`
	BoosterHeater1Status             bool        `json:"BoosterHeater1Status"`
	BoosterHeater2PlusStatus         bool        `json:"BoosterHeater2PlusStatus"`
	BoosterHeater2Status             bool        `json:"BoosterHeater2Status"`
	CSVReport1Min                    bool        `json:"CSVReport1min"`
	CanCool                          bool        `json:"CanCool"`
	CanEstimateEnergyUsage           bool        `json:"CanEstimateEnergyUsage"`
	CanHeat                          bool        `json:"CanHeat"`
	CanMeasureEnergyConsumed         bool        `json:"CanMeasureEnergyConsumed"`
	CanMeasureEnergyProduced         bool        `json:"CanMeasureEnergyProduced"`
	CanSetEcoHotWater                bool        `json:"CanSetEcoHotWater"`
	CanSetTankTemperature            bool        `json:"CanSetTankTemperature"`
	CanUseRoomTemperatureCooling     bool        `json:"CanUseRoomTemperatureCooling"`
	CondensingTemperature            float64     `json:"CondensingTemperature"`
	ConfiguredDemandPercentage       interface{} `json:"ConfiguredDemandPercentage"`
	ConsecutiveUploadErrors          int         `json:"ConsecutiveUploadErrors"`
	CoolingEnergyConsumedRate1       int         `json:"CoolingEnergyConsumedRate1"`
	CoolingEnergyConsumedRate2       int         `json:"CoolingEnergyConsumedRate2"`
	CoolingEnergyProducedRate1       int         `json:"CoolingEnergyProducedRate1"`
	CoolingEnergyProducedRate2       int         `json:"CoolingEnergyProducedRate2"`
	CurrentEnergyConsumed            int         `json:"CurrentEnergyConsumed"`
	CurrentEnergyMode                interface{} `json:"CurrentEnergyMode"`
	CurrentEnergyProduced            int         `json:"CurrentEnergyProduced"`
	DECCReport                       bool        `json:"DECCReport"`
	DailyCoolingEnergyConsumed       float64     `json:"DailyCoolingEnergyConsumed"`
	DailyCoolingEnergyProduced       float64     `json:"DailyCoolingEnergyProduced"`
	DailyEnergyConsumedDate          string      `json:"DailyEnergyConsumedDate"`
	DailyEnergyProducedDate          string      `json:"DailyEnergyProducedDate"`
	DailyHeatingEnergyConsumed       float64     `json:"DailyHeatingEnergyConsumed"`
	DailyHeatingEnergyProduced       float64     `json:"DailyHeatingEnergyProduced"`
	DailyHotWaterEnergyConsumed      float64     `json:"DailyHotWaterEnergyConsumed"`
	DailyHotWaterEnergyProduced      float64     `json:"DailyHotWaterEnergyProduced"`
	DailyLegionellaActivationCounter int         `json:"DailyLegionellaActivationCounter"`
	DefrostMode                      int         `json:"DefrostMode"`
	DemandPercentage                 int         `json:"DemandPercentage"`
	DetectedCountry                  interface{} `json:"DetectedCountry"`
	DeviceID                         int         `json:"DeviceID"`
	DeviceType                       int         `json:"DeviceType"`
	DiagnosticEndDate                interface{} `json:"DiagnosticEndDate"`
	DiagnosticMode                   int         `json:"DiagnosticMode"`
	DipSwitch1                       int         `json:"DipSwitch1"`
	DipSwitch2                       int         `json:"DipSwitch2"`
	DipSwitch3                       int         `json:"DipSwitch3"`
	DipSwitch4                       int         `json:"DipSwitch4"`
	DipSwitch5                       int         `json:"DipSwitch5"`
	DipSwitch6                       int         `json:"DipSwitch6"`
	DoNotRespondAfter                interface{} `json:"DoNotRespondAfter"`
	EcoHotWater                      bool        `json:"EcoHotWater"`
	EffectiveFlags                   int         `json:"EffectiveFlags"`
	EffectivePCycle                  int         `json:"EffectivePCycle"`
	ErrorCode                        int         `json:"ErrorCode"`
	ErrorCode2Digit                  int         `json:"ErrorCode2Digit"`
	ErrorMessages                    string      `json:"ErrorMessages"`
	ExceptionCount                   interface{} `json:"ExceptionCount"`
	ExceptionDate                    interface{} `json:"ExceptionDate"`
	ExceptionHash                    interface{} `json:"ExceptionHash"`
	ExpectedCommand                  int         `json:"ExpectedCommand"`
	FTCModel                         int         `json:"FTCModel"`
	FTCRevision                      string      `json:"FTCRevision"`
	FTCVersion                       int         `json:"FTCVersion"`
	FirmwareAppVersion               int         `json:"FirmwareAppVersion"`
	FirmwareDeployment               interface{} `json:"FirmwareDeployment"`
	FirmwareUpdateAborted            bool        `json:"FirmwareUpdateAborted"`
	FirmwareWebVersion               int         `json:"FirmwareWebVersion"`
	FirmwareWlanVersion              int         `json:"FirmwareWlanVersion"`
	FlashWrites                      int         `json:"FlashWrites"`
	FlowTemperature                  float64     `json:"FlowTemperature"`
	FlowTemperatureBoiler            float64     `json:"FlowTemperatureBoiler"`
	FlowTemperatureZone1             float64     `json:"FlowTemperatureZone1"`
	FlowTemperatureZone2             float64     `json:"FlowTemperatureZone2"`
	ForcedHotWaterMode               bool        `json:"ForcedHotWaterMode"`
	HasDemandSideControl             bool        `json:"HasDemandSideControl"`
	HasEcoCuteSettings               bool        `json:"HasEcoCuteSettings"`
	HasEnergyConsumedMeter           bool        `json:"HasEnergyConsumedMeter"`
	HasEnergyProducedMeter           bool        `json:"HasEnergyProducedMeter"`
	HasError                         bool        `json:"HasError"`
	HasErrorMessages                 bool        `json:"HasErrorMessages"`
	HasFTC45Settings                 bool        `json:"HasFTC45Settings"`
	HasFTC6Settings                  bool        `json:"HasFTC6Settings"`
	HasHotWaterTank                  bool        `json:"HasHotWaterTank"`
	HasSimplifiedZone2               bool        `json:"HasSimplifiedZone2"`
	HasThermostatZone1               bool        `json:"HasThermostatZone1"`
	HasThermostatZone2               bool        `json:"HasThermostatZone2"`
	HasZone2                         bool        `json:"HasZone2"`
	HeatPumpFrequency                int         `json:"HeatPumpFrequency"`
	HeatingEnergyConsumedRate1       int         `json:"HeatingEnergyConsumedRate1"`
	HeatingEnergyConsumedRate2       int         `json:"HeatingEnergyConsumedRate2"`
	HeatingEnergyProducedRate1       int         `json:"HeatingEnergyProducedRate1"`
	HeatingEnergyProducedRate2       int         `json:"HeatingEnergyProducedRate2"`
	HeatingFunctionEnabled           bool        `json:"HeatingFunctionEnabled"`
	HideEnergyReport                 bool        `json:"HideEnergyReport"`
	HolidayMode                      bool        `json:"HolidayMode"`
	HotWaterEnergyConsumedRate1      int         `json:"HotWaterEnergyConsumedRate1"`
	HotWaterEnergyConsumedRate2      int         `json:"HotWaterEnergyConsumedRate2"`
	HotWaterEnergyProducedRate1      int         `json:"HotWaterEnergyProducedRate1"`
	HotWaterEnergyProducedRate2      int         `json:"HotWaterEnergyProducedRate2"`
	IdleZone1                        bool        `json:"IdleZone1"`
	IdleZone2                        bool        `json:"IdleZone2"`
	ImmersionHeaterStatus            bool        `json:"ImmersionHeaterStatus"`
	InitialSettingsData              interface{} `json:"InitialSettingsData"`
	InitialSettingsTimestamp         interface{} `json:"InitialSettingsTimestamp"`
	IsFtcModelSupported              bool        `json:"IsFtcModelSupported"`
	IsGeodan                         bool        `json:"IsGeodan"`
	LastEffectiveFlags               int         `json:"LastEffectiveFlags"`
	LastFTCRevision                  interface{} `json:"LastFTCRevision"`
	LastFTCVersion                   int         `json:"LastFTCVersion"`
	LastLegionellaActivationTime     time.Time   `json:"LastLegionellaActivationTime"`
	LastReset                        string      `json:"LastReset"`
	LastTimeStamp                    string      `json:"LastTimeStamp"`
	LinkToMELCloudHome               bool        `json:"LinkToMELCloudHome"`
	LinkedByUserFromMELCloudHome     string      `json:"LinkedByUserFromMELCloudHome"`
	LinkedDevice                     interface{} `json:"LinkedDevice"`
	MacAddress                       string      `json:"MacAddress"`
	MaxIndoorUnits                   int         `json:"MaxIndoorUnits"`
	MaxOutdoorUnits                  int         `json:"MaxOutdoorUnits"`
	MaxPcycle                        int         `json:"MaxPcycle"`
	MaxSetTemperature                float64     `json:"MaxSetTemperature"`
	MaxTankTemperature               float64     `json:"MaxTankTemperature"`
	MaxTemperatureControlUnits       int         `json:"MaxTemperatureControlUnits"`
	MinPcycle                        int         `json:"MinPcycle"`
	MinSetTemperature                float64     `json:"MinSetTemperature"`
	MixingTankWaterTemperature       float64     `json:"MixingTankWaterTemperature"`
	ModelCode                        string      `json:"ModelCode"`
	MqttFlags                        int         `json:"MqttFlags"`
	Offline                          bool        `json:"Offline"`
	OperationMode                    int         `json:"OperationMode"`
	OperationModeZone1               int         `json:"OperationModeZone1"`
	OperationModeZone2               int         `json:"OperationModeZone2"`
	OutdoorTemperature               float64     `json:"OutdoorTemperature"`
	Owner                            int         `json:"Owner"`
	OwnerCountry                     int         `json:"OwnerCountry"`
	OwnerRoleAccessLevel             int         `json:"OwnerRoleAccessLevel"`
	PCycle                           int         `json:"PCycle"`
	PCycleActual                     int         `json:"PCycleActual"`
	PCycleConfigured                 interface{} `json:"PCycleConfigured"`
	Passcode                         interface{} `json:"Passcode"`
	Position                         string      `json:"Position"`
	Power                            bool        `json:"Power"`
	ProhibitCoolingZone1             bool        `json:"ProhibitCoolingZone1"`
	ProhibitCoolingZone2             bool        `json:"ProhibitCoolingZone2"`
	ProhibitHeatingZone1             bool        `json:"ProhibitHeatingZone1"`
	ProhibitHeatingZone2             bool        `json:"ProhibitHeatingZone2"`
	ProhibitHotWater                 bool        `json:"ProhibitHotWater"`
	ProtocolVersion                  int         `json:"ProtocolVersion"`
	Rate1StartTime                   interface{} `json:"Rate1StartTime"`
	Rate2StartTime                   interface{} `json:"Rate2StartTime"`
	RecordNumMax                     int         `json:"RecordNumMax"`
	RefridgerentAddress              int         `json:"RefridgerentAddress"`
	RefrigerantType                  int         `json:"RefrigerantType"`
	ReturnTemperature                float64     `json:"ReturnTemperature"`
	ReturnTemperatureBoiler          float64     `json:"ReturnTemperatureBoiler"`
	ReturnTemperatureZone1           float64     `json:"ReturnTemperatureZone1"`
	ReturnTemperatureZone2           float64     `json:"ReturnTemperatureZone2"`
	RoomTemperatureZone1             float64     `json:"RoomTemperatureZone1"`
	RoomTemperatureZone2             float64     `json:"RoomTemperatureZone2"`
	SPTimeout                        int         `json:"SPTimeout"`
	SSLExpirationDate                string      `json:"SSLExpirationDate"`
	Scene                            interface{} `json:"Scene"`
	SecondaryZoneHeatCurve           bool        `json:"SecondaryZoneHeatCurve"`
	SerialNumber                     string      `json:"SerialNumber"`
	ServerCommunicationDisabled      bool        `json:"ServerCommunicationDisabled"`
	ServerTimerDesired               bool        `json:"ServerTimerDesired"`
	ServerTimerEnabled               bool        `json:"ServerTimerEnabled"`
	SetCoolFlowTemperatureZone1      float64     `json:"SetCoolFlowTemperatureZone1"`
	SetCoolFlowTemperatureZone2      float64     `json:"SetCoolFlowTemperatureZone2"`
	SetHeatFlowTemperatureZone1      float64     `json:"SetHeatFlowTemperatureZone1"`
	SetHeatFlowTemperatureZone2      float64     `json:"SetHeatFlowTemperatureZone2"`
	SetTankWaterTemperature          float64     `json:"SetTankWaterTemperature"`
	SetTemperatureZone1              float64     `json:"SetTemperatureZone1"`
	SetTemperatureZone2              float64     `json:"SetTemperatureZone2"`
	SpState                          int         `json:"SpState"`
	SpSubDivisionsReadInProgress     int         `json:"SpSubDivisionsReadInProgress"`
	SpSubDivisionsToRead             int         `json:"SpSubDivisionsToRead"`
	SpSubDivisionsToWrite            int         `json:"SpSubDivisionsToWrite"`
	SpSubDivisionsWriteInProgress    int         `json:"SpSubDivisionsWriteInProgress"`
	SupportsHourlyEnergyReport       bool        `json:"SupportsHourlyEnergyReport"`
	SystemMaxFlowTemp                int         `json:"SystemMaxFlowTemp"`
	SystemMaxFlowTemperature         interface{} `json:"SystemMaxFlowTemperature"`
	TankWaterTemperature             float64     `json:"TankWaterTemperature"`
	TargetHCTemperatureZone1         float64     `json:"TargetHCTemperatureZone1"`
	TargetHCTemperatureZone2         float64     `json:"TargetHCTemperatureZone2"`
	TemperatureIncrement             float64     `json:"TemperatureIncrement"`
	TemperatureIncrementOverride     int         `json:"TemperatureIncrementOverride"`
	ThermostatStatusZone1            bool        `json:"ThermostatStatusZone1"`
	ThermostatStatusZone2            bool        `json:"ThermostatStatusZone2"`
	ThermostatTypeZone1              int         `json:"ThermostatTypeZone1"`
	ThermostatTypeZone2              int         `json:"ThermostatTypeZone2"`
	TimeZoneID                       int         `json:"TimeZoneID"`
	UnitStatus                       int         `json:"UnitStatus"`
	UnitVersion                      int         `json:"UnitVersion"`
	Units                            []struct {
		Device       int    `json:"Device"`
		ID           int    `json:"ID"`
		IsIndoor     bool   `json:"IsIndoor"`
		Model        string `json:"Model"`
		ModelNumber  *int   `json:"ModelNumber"`
		SerialNumber string `json:"SerialNumber"`
		UnitType     int    `json:"UnitType"`
	} `json:"Units"`
	ValveStatus2Way    bool   `json:"ValveStatus2Way"`
	ValveStatus2Way2A  bool   `json:"ValveStatus2Way2a"`
	ValveStatus2Way2B  bool   `json:"ValveStatus2Way2b"`
	ValveStatus3Way    bool   `json:"ValveStatus3Way"`
	WaterPump1Status   bool   `json:"WaterPump1Status"`
	WaterPump2Status   bool   `json:"WaterPump2Status"`
	WaterPump3Status   bool   `json:"WaterPump3Status"`
	WaterPump4Status   bool   `json:"WaterPump4Status"`
	WifiAdapterStatus  string `json:"WifiAdapterStatus"`
	WifiSignalStrength int    `json:"WifiSignalStrength"`
	Zone1InCoolMode    bool   `json:"Zone1InCoolMode"`
	Zone1InHeatMode    bool   `json:"Zone1InHeatMode"`
	Zone1InRoomMode    bool   `json:"Zone1InRoomMode"`
	Zone2InCoolMode    bool   `json:"Zone2InCoolMode"`
	Zone2InHeatMode    bool   `json:"Zone2InHeatMode"`
	Zone2InRoomMode    bool   `json:"Zone2InRoomMode"`
	Zone2Master        bool   `json:"Zone2Master"`
}
